
---
apiVersion: v1                    # Define a versão da API Kubernetes usada para este recurso (v1 é padrão para Services)
kind: Service                     # Tipo do objeto que estamos criando (Service, responsável por expor Pods na rede)
metadata:                         # Metadados do recurso (informações de identificação)
  name: flask-service3             # Nome do Service (usado para referência no cluster)
spec:                             # Especificação do Service (define como ele irá expor os Pods)
  selector:                        # Define quais Pods este Service irá alcançar
    app: flask-app                 # Seleciona todos os Pods que possuem a label "app: flask-app"
  ports:                           # Define as portas que o Service irá expor
    - protocol: TCP                # Protocolo usado (TCP é padrão para aplicações web)
      port: 5000                   # Porta que será exposta pelo Service
      targetPort: 5000             # Porta em que os Pods estão escutando (a mesma do container)
  type: LoadBalancer               # Tipo de Service: LoadBalancer cria um IP externo acessível fora do cluster

---
apiVersion: apps/v1              # Define a versão da API Kubernetes usada para este recurso (apps/v1 é a mais usada para Deployments)
kind: Deployment                 # Tipo do objeto que estamos criando (Deployment, responsável por gerenciar réplicas de Pods)
metadata:                        # Metadados do recurso (informações de identificação)
  name: flask-app-deployment     # Nome do Deployment (usado para referência no cluster)
spec:                            # Especificação do Deployment (define o comportamento desejado)
  replicas: 4                    # Número de réplicas (pods) que devem estar rodando simultaneamente
  selector:                      # Define como o Deployment identifica os Pods que ele gerencia
    matchLabels:                 # Critério de seleção baseado em labels
      app: flask-app             # Seleciona todos os Pods que tenham a label "app: flask-app"
  template:                      # Modelo usado para criar os Pods
    metadata:                    # Metadados do Pod que será criado
      labels:                    # Labels aplicadas aos Pods (devem casar com o selector acima)
        app: flask-app           # Label "app: flask-app" aplicada em cada Pod
    spec:                        # Especificação dos containers dentro do Pod
      containers:                # Lista de containers que o Pod terá (neste caso, apenas 1)
        - name: flask            # Nome do container dentro do Pod
          image: leonardotrevisol/flask-kub-project:latest   # Imagem Docker usada para rodar o container
          
